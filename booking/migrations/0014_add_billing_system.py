# Generated by Django 4.2.23 on 2025-09-04 22:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("booking", "0013_alter_calendarsyncpreferences_conflict_resolution"),
    ]

    operations = [
        migrations.CreateModel(
            name="BillingPeriod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., 'January 2025' or 'Q1 2025'", max_length=100
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("annually", "Annually"),
                            ("custom", "Custom Period"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("closed", "Closed"),
                            ("draft", "Draft"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "is_current",
                    models.BooleanField(
                        default=False,
                        help_text="Only one period can be current at a time",
                    ),
                ),
                (
                    "auto_close_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When to automatically close this period",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "closed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="closed_billing_periods",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_billing_periods",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "booking_billingperiod",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="BillingRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rate_type",
                    models.CharField(
                        choices=[
                            ("standard", "Standard Rate"),
                            ("peak", "Peak Hours Rate"),
                            ("off_peak", "Off-Peak Hours Rate"),
                            ("weekend", "Weekend Rate"),
                            ("holiday", "Holiday Rate"),
                        ],
                        default="standard",
                        max_length=20,
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        decimal_places=2, help_text="Rate per hour", max_digits=8
                    ),
                ),
                (
                    "minimum_charge_minutes",
                    models.PositiveIntegerField(
                        default=0, help_text="Minimum billable time in minutes"
                    ),
                ),
                (
                    "rounding_minutes",
                    models.PositiveIntegerField(
                        default=1, help_text="Round billing to nearest X minutes"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("all", "All Users"),
                            ("student", "Students"),
                            ("researcher", "Researchers"),
                            ("academic", "Academics"),
                            ("technician", "Technicians"),
                            ("external", "External Users"),
                        ],
                        default="all",
                        max_length=20,
                    ),
                ),
                (
                    "applies_from_time",
                    models.TimeField(
                        blank=True,
                        help_text="Start time for this rate (e.g., 09:00 for peak)",
                        null=True,
                    ),
                ),
                (
                    "applies_to_time",
                    models.TimeField(
                        blank=True,
                        help_text="End time for this rate (e.g., 17:00 for peak)",
                        null=True,
                    ),
                ),
                (
                    "applies_weekdays_only",
                    models.BooleanField(
                        default=False, help_text="Only apply on weekdays"
                    ),
                ),
                (
                    "applies_weekends_only",
                    models.BooleanField(
                        default=False, help_text="Only apply on weekends"
                    ),
                ),
                ("valid_from", models.DateField(default=django.utils.timezone.now)),
                (
                    "valid_until",
                    models.DateField(
                        blank=True, help_text="Leave blank for no expiry", null=True
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=1, help_text="Higher number = higher priority"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_billing_rates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        help_text="Apply to specific department only (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booking.department",
                    ),
                ),
            ],
            options={
                "db_table": "booking_billingrate",
                "ordering": ["-priority", "rate_type"],
            },
        ),
        migrations.CreateModel(
            name="BillingRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "project_code",
                    models.CharField(
                        blank=True,
                        help_text="Project or grant code to charge",
                        max_length=50,
                    ),
                ),
                (
                    "cost_center",
                    models.CharField(
                        blank=True, help_text="Cost center code", max_length=50
                    ),
                ),
                (
                    "session_start",
                    models.DateTimeField(
                        help_text="When resource usage actually started"
                    ),
                ),
                (
                    "session_end",
                    models.DateTimeField(
                        help_text="When resource usage actually ended"
                    ),
                ),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        help_text="Actual usage duration in minutes"
                    ),
                ),
                (
                    "billable_minutes",
                    models.PositiveIntegerField(
                        help_text="Billable minutes after rounding and minimums"
                    ),
                ),
                (
                    "billable_hours",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Billable hours (minutes/60)",
                        max_digits=8,
                    ),
                ),
                (
                    "hourly_rate_applied",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Rate used for calculation",
                        max_digits=8,
                    ),
                ),
                (
                    "total_charge",
                    models.DecimalField(
                        decimal_places=2, help_text="Total charge amount", max_digits=10
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("confirmed", "Confirmed"),
                            ("billed", "Billed"),
                            ("disputed", "Disputed"),
                            ("adjusted", "Adjusted"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "original_charge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original charge before adjustments",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "adjustment_reason",
                    models.TextField(
                        blank=True, help_text="Reason for any charge adjustments"
                    ),
                ),
                ("adjusted_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "billing_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional billing information",
                    ),
                ),
                (
                    "adjusted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="adjusted_billing_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "billing_period",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="billing_records",
                        to="booking.billingperiod",
                    ),
                ),
                (
                    "billing_rate",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="billing_records",
                        to="booking.billingrate",
                    ),
                ),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="billing_record",
                        to="booking.booking",
                    ),
                ),
                (
                    "confirmed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="confirmed_billing_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="billing_records",
                        to="booking.department",
                    ),
                ),
            ],
            options={
                "db_table": "booking_billingrecord",
                "ordering": ["-session_start"],
            },
        ),
        migrations.CreateModel(
            name="DepartmentBilling",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_sessions", models.PositiveIntegerField(default=0)),
                (
                    "total_hours",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "total_charges",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "draft_charges",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "confirmed_charges",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "billed_charges",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "resource_breakdown",
                    models.JSONField(
                        default=dict, help_text="Breakdown by resource type"
                    ),
                ),
                (
                    "user_breakdown",
                    models.JSONField(default=dict, help_text="Breakdown by user"),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "billing_period",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="department_summaries",
                        to="booking.billingperiod",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="billing_summaries",
                        to="booking.department",
                    ),
                ),
            ],
            options={
                "db_table": "booking_departmentbilling",
                "ordering": ["-billing_period__start_date", "department__name"],
                "unique_together": {("department", "billing_period")},
            },
        ),
        migrations.RemoveField(
            model_name="licensevalidationlog",
            name="license",
        ),
        migrations.AddField(
            model_name="resource",
            name="billing_description",
            field=models.TextField(
                blank=True, help_text="Description of billing policy for this resource"
            ),
        ),
        migrations.AddField(
            model_name="resource",
            name="default_billing_rate",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Default hourly rate (£) for this resource",
                max_digits=8,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="resource",
            name="is_billable",
            field=models.BooleanField(
                default=False, help_text="Whether this resource charges for usage"
            ),
        ),
        migrations.DeleteModel(
            name="BrandingConfiguration",
        ),
        migrations.DeleteModel(
            name="LicenseConfiguration",
        ),
        migrations.DeleteModel(
            name="LicenseValidationLog",
        ),
        migrations.AddField(
            model_name="billingrecord",
            name="resource",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="billing_records",
                to="booking.resource",
            ),
        ),
        migrations.AddField(
            model_name="billingrecord",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="billing_records",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="billingrate",
            name="resource",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="billing_rates",
                to="booking.resource",
            ),
        ),
        migrations.AddIndex(
            model_name="billingrecord",
            index=models.Index(
                fields=["billing_period", "department"],
                name="booking_bil_billing_5ea9aa_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="billingrecord",
            index=models.Index(
                fields=["user", "session_start"], name="booking_bil_user_id_5f49ac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="billingrecord",
            index=models.Index(
                fields=["resource", "session_start"],
                name="booking_bil_resourc_df7dc1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="billingrecord",
            index=models.Index(
                fields=["status", "billing_period"],
                name="booking_bil_status_775358_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="billingperiod",
            constraint=models.CheckConstraint(
                check=models.Q(("end_date__gt", models.F("start_date"))),
                name="billing_period_end_after_start",
            ),
        ),
    ]
