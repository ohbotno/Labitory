# Generated by Django 4.2.23 on 2025-09-17 21:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("booking", "0025_alter_approvalrule_resource"),
    ]

    operations = [
        migrations.CreateModel(
            name="ApprovalDelegate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "delegation_type",
                    models.CharField(
                        choices=[
                            ("temporary", "Temporary Delegation"),
                            ("permanent", "Permanent Delegation"),
                            ("conditional", "Conditional Delegation"),
                        ],
                        default="temporary",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(help_text="When delegation becomes active"),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When delegation expires (null = permanent)",
                        null=True,
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(
                        default=dict,
                        help_text="Conditions under which delegation is valid",
                    ),
                ),
                (
                    "max_delegations",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of approvals delegate can make",
                        null=True,
                    ),
                ),
                (
                    "used_delegations",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of approvals delegate has made"
                    ),
                ),
                ("reason", models.TextField(help_text="Reason for delegation")),
                (
                    "notify_delegator",
                    models.BooleanField(
                        default=True,
                        help_text="Send notifications to delegator when delegate acts",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "booking_approvaldelegate",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuotaAllocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "resource_type",
                    models.CharField(
                        blank=True,
                        help_text="Apply to all resources of this type",
                        max_length=50,
                    ),
                ),
                (
                    "user_roles",
                    models.JSONField(
                        default=list, help_text="User roles this allocation applies to"
                    ),
                ),
                (
                    "quota_type",
                    models.CharField(
                        choices=[
                            ("time_based", "Time-Based (Hours)"),
                            ("booking_count", "Booking Count"),
                            ("cost_based", "Cost-Based"),
                        ],
                        default="time_based",
                        max_length=20,
                    ),
                ),
                (
                    "quota_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Quota amount (hours, count, cost)",
                        max_digits=10,
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                (
                    "allow_overdraft",
                    models.BooleanField(
                        default=False, help_text="Allow usage to exceed quota"
                    ),
                ),
                (
                    "overdraft_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Maximum overdraft allowed",
                        max_digits=10,
                    ),
                ),
                ("auto_approve_within_quota", models.BooleanField(default=True)),
                ("require_approval_over_quota", models.BooleanField(default=True)),
                ("auto_renew", models.BooleanField(default=True)),
                (
                    "grace_period_days",
                    models.IntegerField(
                        default=0, help_text="Days of grace period after quota expires"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "priority",
                    models.IntegerField(
                        default=100,
                        help_text="Higher priority allocations override lower ones",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_quota_allocations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quota_allocations",
                        to="booking.resource",
                    ),
                ),
                (
                    "specific_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="quota_allocations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "booking_quotaallocation",
                "ordering": ["-priority", "created_at"],
            },
        ),
        migrations.AddField(
            model_name="approvalrule",
            name="tier_escalation_enabled",
            field=models.BooleanField(
                default=True, help_text="Enable automatic escalation on timeout"
            ),
        ),
        migrations.AddField(
            model_name="approvalrule",
            name="tier_mode",
            field=models.CharField(
                choices=[
                    ("sequential", "Sequential - Each tier must approve in order"),
                    ("parallel", "Parallel - All tiers can approve simultaneously"),
                    (
                        "conditional",
                        "Conditional - Next tier depends on previous decisions",
                    ),
                ],
                default="sequential",
                help_text="How tiers are processed",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="approvalrule",
            name="tier_timeout_hours",
            field=models.PositiveIntegerField(
                default=48, help_text="Default timeout for tier approval"
            ),
        ),
        migrations.CreateModel(
            name="UserQuota",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                (
                    "used_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "reserved_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Amount reserved by pending bookings",
                        max_digits=10,
                    ),
                ),
                (
                    "overdraft_used",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "allocation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_quotas",
                        to="booking.quotaallocation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quotas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "booking_userquota",
                "ordering": ["-period_start"],
                "unique_together": {("user", "allocation", "period_start")},
            },
        ),
        migrations.CreateModel(
            name="SingleApprovalRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("delegated", "Delegated"),
                            ("escalated", "Escalated"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low Priority"),
                            ("normal", "Normal Priority"),
                            ("high", "High Priority"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                (
                    "due_date",
                    models.DateTimeField(
                        blank=True, help_text="Expected approval deadline", null=True
                    ),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("response_comments", models.TextField(blank=True)),
                ("escalated_at", models.DateTimeField(blank=True, null=True)),
                ("escalation_reason", models.TextField(blank=True)),
                (
                    "approval_data",
                    models.JSONField(
                        default=dict, help_text="Additional approval context data"
                    ),
                ),
                (
                    "reminders_sent",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of reminder notifications sent"
                    ),
                ),
                ("last_reminder_sent", models.DateTimeField(blank=True, null=True)),
                (
                    "approval_rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booking.approvalrule",
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approvals_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_approver",
                    models.ForeignKey(
                        help_text="Originally assigned approver",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="single_approval_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="single_approval",
                        to="booking.booking",
                    ),
                ),
                (
                    "current_approver",
                    models.ForeignKey(
                        help_text="Current approver (may be delegate)",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="current_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "delegation",
                    models.ForeignKey(
                        blank=True,
                        help_text="Delegation used if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="booking.approvaldelegate",
                    ),
                ),
                (
                    "escalated_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="escalated_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="approval_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "booking_singleapprovalrequest",
                "ordering": ["-requested_at"],
            },
        ),
        migrations.CreateModel(
            name="QuotaUsageLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount_used", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "usage_type",
                    models.CharField(
                        choices=[
                            ("booking", "Booking Usage"),
                            ("reservation", "Reservation"),
                            ("release", "Reservation Release"),
                            ("refund", "Usage Refund"),
                            ("adjustment", "Manual Adjustment"),
                        ],
                        default="booking",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "booking",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quota_usage_logs",
                        to="booking.booking",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="quota_usage_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_quota",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="booking.userquota",
                    ),
                ),
            ],
            options={
                "db_table": "booking_quotausagelog",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ApprovalEscalation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timeout_hours",
                    models.PositiveIntegerField(
                        help_text="Hours before escalation triggers"
                    ),
                ),
                (
                    "business_hours_only",
                    models.BooleanField(
                        default=True, help_text="Count only business hours for timeout"
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("notify", "Send Notification"),
                            ("delegate", "Auto-delegate to Substitute"),
                            ("auto_approve", "Auto-approve with Conditions"),
                            ("escalate_manager", "Escalate to Manager"),
                            ("escalate_admin", "Escalate to Administrator"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(
                        default=dict, help_text="Conditions for escalation"
                    ),
                ),
                (
                    "notification_template",
                    models.TextField(
                        blank=True, help_text="Custom notification template"
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=1, help_text="Escalation priority order"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "approval_rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="escalations",
                        to="booking.approvalrule",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="escalations_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "substitute_approver",
                    models.ForeignKey(
                        blank=True,
                        help_text="User to escalate to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="escalation_substitutes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "booking_approvalescalation",
                "ordering": ["priority", "timeout_hours"],
            },
        ),
        migrations.AddField(
            model_name="approvaldelegate",
            name="approval_rule",
            field=models.ForeignKey(
                blank=True,
                help_text="Specific rule to delegate, or all if empty",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="booking.approvalrule",
            ),
        ),
        migrations.AddField(
            model_name="approvaldelegate",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="delegations_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="approvaldelegate",
            name="delegate",
            field=models.ForeignKey(
                help_text="User receiving approval authority",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="delegations_received",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="approvaldelegate",
            name="delegator",
            field=models.ForeignKey(
                help_text="User delegating approval authority",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="delegations_given",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="approvaldelegate",
            name="resource",
            field=models.ForeignKey(
                blank=True,
                help_text="Specific resource to delegate, or all if empty",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="booking.resource",
            ),
        ),
        migrations.CreateModel(
            name="BookingApproval",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tier_level",
                    models.PositiveIntegerField(
                        help_text="Approval tier level (1, 2, 3, etc.)"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("escalated", "Escalated"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "comments",
                    models.TextField(blank=True, help_text="Approver comments"),
                ),
                (
                    "conditions",
                    models.TextField(
                        blank=True, help_text="Special conditions for approval"
                    ),
                ),
                ("escalation_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deadline",
                    models.DateTimeField(
                        blank=True, help_text="Approval deadline", null=True
                    ),
                ),
                (
                    "approval_rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booking_approvals",
                        to="booking.approvalrule",
                    ),
                ),
                (
                    "approver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="approval_steps",
                        to="booking.booking",
                    ),
                ),
                (
                    "escalated_from",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="escalated_to",
                        to="booking.bookingapproval",
                    ),
                ),
            ],
            options={
                "db_table": "booking_bookingapproval",
                "ordering": ["tier_level", "created_at"],
                "unique_together": {("booking", "tier_level", "approver")},
            },
        ),
        migrations.CreateModel(
            name="ApprovalTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tier_level", models.PositiveIntegerField()),
                (
                    "name",
                    models.CharField(
                        help_text="Tier name (e.g., 'Department Head', 'Lab Manager')",
                        max_length=100,
                    ),
                ),
                (
                    "approver_roles",
                    models.JSONField(
                        default=list,
                        help_text="User roles that can approve at this tier",
                    ),
                ),
                (
                    "requires_all_approvers",
                    models.BooleanField(
                        default=False, help_text="Require approval from all approvers"
                    ),
                ),
                (
                    "approval_threshold",
                    models.PositiveIntegerField(
                        default=1, help_text="Number of approvals needed"
                    ),
                ),
                (
                    "auto_approve_conditions",
                    models.JSONField(
                        default=dict, help_text="Conditions for automatic approval"
                    ),
                ),
                (
                    "approval_deadline_hours",
                    models.PositiveIntegerField(
                        default=48, help_text="Hours to approve before escalation"
                    ),
                ),
                (
                    "approval_rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="approval_tiers",
                        to="booking.approvalrule",
                    ),
                ),
                (
                    "approvers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="approval_tiers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "escalation_tier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="escalated_from_tier",
                        to="booking.approvaltier",
                    ),
                ),
            ],
            options={
                "db_table": "booking_approvaltier",
                "ordering": ["approval_rule", "tier_level"],
                "unique_together": {("approval_rule", "tier_level")},
            },
        ),
        migrations.CreateModel(
            name="ApprovalNotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("approval_request", "Approval Request"),
                            ("approval_reminder", "Approval Reminder"),
                            ("approval_approved", "Approval Granted"),
                            ("approval_rejected", "Approval Rejected"),
                            ("approval_delegated", "Approval Delegated"),
                            ("approval_escalated", "Approval Escalated"),
                            ("approval_expired", "Approval Expired"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "subject_template",
                    models.CharField(
                        help_text="Email subject or notification title", max_length=500
                    ),
                ),
                (
                    "body_template",
                    models.TextField(
                        help_text="Message body with placeholder variables"
                    ),
                ),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("in_app", "In-App Notification"),
                            ("all", "All Methods"),
                        ],
                        default="email",
                        max_length=20,
                    ),
                ),
                ("send_to_requester", models.BooleanField(default=True)),
                ("send_to_approver", models.BooleanField(default=True)),
                (
                    "send_to_delegator",
                    models.BooleanField(
                        default=False,
                        help_text="Send to original delegator if delegated",
                    ),
                ),
                ("send_immediately", models.BooleanField(default=True)),
                (
                    "delay_minutes",
                    models.PositiveIntegerField(
                        default=0, help_text="Delay before sending"
                    ),
                ),
                (
                    "available_variables",
                    models.JSONField(
                        default=dict,
                        help_text="Available template variables and descriptions",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "approval_rule",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific rule, or global if empty",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booking.approvalrule",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notification_templates_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "booking_approvalnotificationtemplate",
                "ordering": ["template_type", "name"],
                "unique_together": {("template_type", "approval_rule")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="approvaldelegate",
            unique_together={("delegator", "delegate", "approval_rule", "resource")},
        ),
    ]
