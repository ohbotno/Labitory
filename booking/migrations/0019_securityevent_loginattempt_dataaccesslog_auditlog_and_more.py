# Generated by Django 4.2.23 on 2025-09-10 17:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("booking", "0018_add_two_factor_authentication"),
    ]

    operations = [
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login_attempt", "Login Attempt"),
                            ("failed_login", "Failed Login"),
                            ("password_change", "Password Change"),
                            ("2fa_enabled", "2FA Enabled"),
                            ("2fa_disabled", "2FA Disabled"),
                            ("token_created", "API Token Created"),
                            ("token_revoked", "API Token Revoked"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("account_locked", "Account Locked"),
                            ("permission_denied", "Permission Denied"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField()),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Security Event",
                "verbose_name_plural": "Security Events",
                "db_table": "booking_securityevent",
                "indexes": [
                    models.Index(
                        fields=["user", "event_type"],
                        name="booking_sec_user_id_3544a8_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="booking_sec_timesta_c73c58_idx"
                    ),
                    models.Index(
                        fields=["event_type", "timestamp"],
                        name="booking_sec_event_t_e02b43_idx",
                    ),
                    models.Index(
                        fields=["ip_address"], name="booking_sec_ip_addr_19eabf_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(db_index=True, max_length=150)),
                (
                    "attempt_type",
                    models.CharField(
                        choices=[
                            ("SUCCESS", "Successful Login"),
                            ("FAILED_PASSWORD", "Failed - Wrong Password"),
                            ("FAILED_USERNAME", "Failed - Wrong Username"),
                            ("FAILED_2FA", "Failed - 2FA"),
                            ("FAILED_LOCKED", "Failed - Account Locked"),
                            ("FAILED_DISABLED", "Failed - Account Disabled"),
                            ("LOGOUT", "Logout"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("ip_address", models.GenericIPAddressField(db_index=True)),
                ("user_agent", models.TextField(blank=True)),
                ("failure_reason", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Login Attempt",
                "verbose_name_plural": "Login Attempts",
                "db_table": "booking_loginattempt",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["username", "timestamp"],
                        name="booking_log_usernam_662729_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="booking_log_ip_addr_ce2efe_idx",
                    ),
                    models.Index(
                        fields=["attempt_type", "timestamp"],
                        name="booking_log_attempt_1ff3b9_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DataAccessLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "access_type",
                    models.CharField(
                        choices=[
                            ("VIEW", "View"),
                            ("SEARCH", "Search"),
                            ("EXPORT", "Export"),
                            ("PRINT", "Print"),
                            ("API_READ", "API Read"),
                        ],
                        max_length=20,
                    ),
                ),
                ("resource_type", models.CharField(max_length=100)),
                ("resource_id", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("search_criteria", models.JSONField(blank=True, default=dict)),
                ("fields_accessed", models.JSONField(blank=True, default=list)),
                ("purpose", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Access Log",
                "verbose_name_plural": "Data Access Logs",
                "db_table": "booking_dataaccesslog",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="booking_dat_user_id_4b176e_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "timestamp"],
                        name="booking_dat_resourc_ce62bc_idx",
                    ),
                    models.Index(
                        fields=["access_type", "timestamp"],
                        name="booking_dat_access__8b6d53_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=150)),
                ("object_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Create"),
                            ("UPDATE", "Update"),
                            ("DELETE", "Delete"),
                            ("READ", "Read"),
                            ("LOGIN", "Login"),
                            ("LOGOUT", "Logout"),
                            ("PERMISSION_CHANGE", "Permission Change"),
                            ("API_ACCESS", "API Access"),
                            ("EXPORT", "Data Export"),
                            ("IMPORT", "Data Import"),
                        ],
                        max_length=20,
                    ),
                ),
                ("table_name", models.CharField(blank=True, max_length=255)),
                ("field_changes", models.JSONField(blank=True, default=dict)),
                ("old_values", models.JSONField(blank=True, default=dict)),
                ("new_values", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("description", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("request_method", models.CharField(blank=True, max_length=10)),
                ("request_path", models.CharField(blank=True, max_length=500)),
                (
                    "request_id",
                    models.CharField(blank=True, db_index=True, max_length=50),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "db_table": "booking_auditlog",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="booking_aud_user_id_3cabee_idx",
                    ),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="booking_aud_content_95957f_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="booking_aud_action_052d4e_idx",
                    ),
                    models.Index(
                        fields=["table_name", "timestamp"],
                        name="booking_aud_table_n_ffc6d1_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="booking_aud_ip_addr_ec19f4_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="APIToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("jti", models.CharField(db_index=True, max_length=50, unique=True)),
                (
                    "token_type",
                    models.CharField(
                        choices=[
                            ("access", "Access Token"),
                            ("refresh", "Refresh Token"),
                        ],
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_revoked", models.BooleanField(default=False)),
                ("revoked_at", models.DateTimeField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "API Token",
                "verbose_name_plural": "API Tokens",
                "db_table": "booking_apitoken",
                "indexes": [
                    models.Index(fields=["jti"], name="booking_api_jti_ad30be_idx"),
                    models.Index(
                        fields=["user", "token_type"],
                        name="booking_api_user_id_37fa04_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="booking_api_expires_0baf94_idx"
                    ),
                    models.Index(
                        fields=["is_revoked"], name="booking_api_is_revo_6bf791_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AdminAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("USER_CREATE", "User Creation"),
                            ("USER_UPDATE", "User Update"),
                            ("USER_DELETE", "User Deletion"),
                            ("USER_ACTIVATE", "User Activation"),
                            ("USER_DEACTIVATE", "User Deactivation"),
                            ("PERMISSION_GRANT", "Permission Granted"),
                            ("PERMISSION_REVOKE", "Permission Revoked"),
                            ("ROLE_CHANGE", "Role Change"),
                            ("SYSTEM_CONFIG", "System Configuration"),
                            ("DATA_EXPORT", "Data Export"),
                            ("DATA_IMPORT", "Data Import"),
                            ("BACKUP_CREATE", "Backup Created"),
                            ("BACKUP_RESTORE", "Backup Restored"),
                        ],
                        db_index=True,
                        max_length=30,
                    ),
                ),
                ("target_username", models.CharField(blank=True, max_length=150)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("description", models.TextField()),
                ("old_values", models.JSONField(blank=True, default=dict)),
                ("new_values", models.JSONField(blank=True, default=dict)),
                ("reason", models.TextField(blank=True)),
                (
                    "admin_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="admin_actions_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Admin Action",
                "verbose_name_plural": "Admin Actions",
                "db_table": "booking_adminaction",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["admin_user", "timestamp"],
                        name="booking_adm_admin_u_396376_idx",
                    ),
                    models.Index(
                        fields=["action_type", "timestamp"],
                        name="booking_adm_action__45cb8c_idx",
                    ),
                    models.Index(
                        fields=["target_user", "timestamp"],
                        name="booking_adm_target__48df6c_idx",
                    ),
                ],
            },
        ),
    ]
